plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.vladmihalcea:hibernate-types-52:2.10.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.hsqldb:hsqldb'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.1'
    testImplementation 'org.testcontainers:postgresql:1.15.1'
}

test {
    useJUnitPlatform()
}

task postgresClean(type: Exec) {
    commandLine 'docker', 'rm', '-f', '/postgres-batch-poc'
}

task postgresStart(type: Exec) {
    dependsOn postgresClean
    commandLine 'docker', 'run', '-d', '-it',
            '--name', '/postgres-batch-poc',
            '-e', 'POSTGRES_PASSWORD=root',
            '-p', '5433:5432',
            'postgres:10.2-alpine'
}